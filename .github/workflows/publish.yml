name: Publish

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE: shinvey/node-alpine-git
  BUILD_VERSION: v1

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_image_tag: [14-alpine,16-alpine,18-alpine]
        lib: ['',dev,glibc]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          array_join () {
            # How can I join elements of an array in Bash? https://stackoverflow.com/a/17841619/7561296
            local IFS="$1"; shift; echo "$*";
          }
          _COMPOSED_TAG=$(array_join - ${{ matrix.node_image_tag }} ${{ matrix.lib }} ${{ env.BUILD_VERSION }})
          # Setting an output parameter https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
          echo "IMAGE_WITH_TAG=${{ env.DOCKER_IMAGE }}:$_COMPOSED_TAG" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.prepare.outputs.IMAGE_WITH_TAG }}
          build-args: |
            NODE_IMAGE_TAG=${{ matrix.node_image_tag }}
            LIB=${{ matrix.lib }}

      - name: Inspect Image
        run: docker buildx imagetools inspect ${{ steps.prepare.outputs.IMAGE_WITH_TAG }}

      - name: Test Docker image
        run: |
          list_tools_version () {
            echo node version $(node --version)
            echo npm version $(npm --version)
            echo yarn version $(yarn --version)
            git --version
            git lfs --version
          }
          docker run -i ${{ steps.prepare.outputs.IMAGE_WITH_TAG }} /bin/sh -c "$(declare -f list_tools_version);list_tools_version"

  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        with:
          destination_container_repo: ${{ env.DOCKER_IMAGE }}
          provider: dockerhub
